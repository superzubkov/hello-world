// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Link                 string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	RequestTime          string   `protobuf:"bytes,3,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Content              string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	HttpHeaders          string   `protobuf:"bytes,6,opt,name=http_headers,json=httpHeaders,proto3" json:"http_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Task) GetRequestTime() string {
	if m != nil {
		return m.RequestTime
	}
	return ""
}

func (m *Task) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Task) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Task) GetHttpHeaders() string {
	if m != nil {
		return m.HttpHeaders
	}
	return ""
}

type CreateTaskRequest struct {
	TaskLink             string   `protobuf:"bytes,1,opt,name=task_link,json=taskLink,proto3" json:"task_link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTaskLink() string {
	if m != nil {
		return m.TaskLink
	}
	return ""
}

type CreateTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type ReadTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTaskRequest) Reset()         { *m = ReadTaskRequest{} }
func (m *ReadTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTaskRequest) ProtoMessage()    {}
func (*ReadTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *ReadTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTaskRequest.Unmarshal(m, b)
}
func (m *ReadTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTaskRequest.Marshal(b, m, deterministic)
}
func (m *ReadTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTaskRequest.Merge(m, src)
}
func (m *ReadTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTaskRequest.Size(m)
}
func (m *ReadTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTaskRequest proto.InternalMessageInfo

func (m *ReadTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ReadTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTaskResponse) Reset()         { *m = ReadTaskResponse{} }
func (m *ReadTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ReadTaskResponse) ProtoMessage()    {}
func (*ReadTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *ReadTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTaskResponse.Unmarshal(m, b)
}
func (m *ReadTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTaskResponse.Marshal(b, m, deterministic)
}
func (m *ReadTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTaskResponse.Merge(m, src)
}
func (m *ReadTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ReadTaskResponse.Size(m)
}
func (m *ReadTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTaskResponse proto.InternalMessageInfo

func (m *ReadTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "api.Task")
	proto.RegisterType((*CreateTaskRequest)(nil), "api.CreateTaskRequest")
	proto.RegisterType((*CreateTaskResponse)(nil), "api.CreateTaskResponse")
	proto.RegisterType((*ReadTaskRequest)(nil), "api.ReadTaskRequest")
	proto.RegisterType((*ReadTaskResponse)(nil), "api.ReadTaskResponse")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0xc5, 0xbf, 0xa4, 0xf9, 0xd2, 0xe6, 0x06, 0xf1, 0xe7, 0x0a, 0x5a, 0xab, 0x08, 0x09, 0x3c,
	0x21, 0x86, 0x08, 0xda, 0x89, 0x89, 0x81, 0x05, 0x24, 0xa6, 0xd0, 0x3d, 0x32, 0xcd, 0x95, 0x6a,
	0x85, 0x26, 0x21, 0x76, 0x79, 0x07, 0x5e, 0x83, 0x27, 0x45, 0xbe, 0x69, 0x68, 0xd5, 0x2e, 0x6c,
	0x39, 0xbf, 0x7b, 0x7c, 0xcf, 0x71, 0x64, 0x00, 0xab, 0x4c, 0x91, 0xd4, 0x4d, 0x65, 0x2b, 0xec,
	0xa9, 0x5a, 0xcb, 0x6f, 0x0f, 0x82, 0x99, 0x32, 0x05, 0x1e, 0x82, 0xaf, 0x73, 0xe1, 0x5d, 0x7a,
	0xd7, 0x51, 0xea, 0xeb, 0x1c, 0x11, 0x82, 0x77, 0x5d, 0x16, 0xc2, 0x67, 0xc2, 0xdf, 0x78, 0x05,
	0x07, 0x0d, 0x7d, 0xac, 0xc8, 0xd8, 0xcc, 0xea, 0x25, 0x89, 0x1e, 0xcf, 0xe2, 0x35, 0x9b, 0xe9,
	0x25, 0xe1, 0x10, 0x42, 0x63, 0x95, 0x5d, 0x19, 0x11, 0xf0, 0x70, 0xad, 0x50, 0x40, 0x7f, 0x5e,
	0x95, 0x96, 0x4a, 0x2b, 0xfe, 0xf3, 0xa0, 0x93, 0x6e, 0xe9, 0xc2, 0xda, 0x3a, 0x5b, 0x90, 0xca,
	0xa9, 0x31, 0x22, 0x6c, 0x97, 0x3a, 0xf6, 0xd4, 0x22, 0x79, 0x0b, 0x27, 0x8f, 0x0d, 0x29, 0x4b,
	0xae, 0x69, 0xda, 0xa6, 0xe1, 0x39, 0x44, 0xee, 0x32, 0x19, 0xb7, 0x6c, 0x7b, 0x0f, 0x1c, 0x78,
	0xd1, 0x65, 0x21, 0xa7, 0x80, 0xdb, 0x27, 0x4c, 0x5d, 0x95, 0x86, 0xf0, 0x02, 0x02, 0xe7, 0x60,
	0x77, 0x3c, 0x89, 0x12, 0x55, 0xeb, 0x84, 0x0d, 0x8c, 0xe5, 0x0d, 0x1c, 0xa5, 0xa4, 0xf2, 0xed,
	0x90, 0x11, 0xf4, 0x39, 0xe4, 0xf7, 0xd7, 0x84, 0x4e, 0x3e, 0xe7, 0xf2, 0x0e, 0x8e, 0x37, 0xde,
	0x3f, 0xad, 0x9f, 0x7c, 0x79, 0x10, 0x3b, 0xf9, 0x4a, 0xcd, 0xa7, 0x9e, 0x13, 0x3e, 0x00, 0x6c,
	0x3a, 0xe2, 0x90, 0xed, 0x7b, 0xd7, 0x1c, 0x8f, 0xf6, 0x78, 0x9b, 0x26, 0xff, 0xe1, 0x3d, 0x0c,
	0xba, 0x0e, 0x78, 0xca, 0xb6, 0x9d, 0xfa, 0xe3, 0xb3, 0x1d, 0xda, 0x1d, 0x7d, 0x0b, 0xf9, 0x09,
	0x4c, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xef, 0x80, 0xac, 0x10, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	ReadTask(ctx context.Context, in *ReadTaskRequest, opts ...grpc.CallOption) (*ReadTaskResponse, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/api.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ReadTask(ctx context.Context, in *ReadTaskRequest, opts ...grpc.CallOption) (*ReadTaskResponse, error) {
	out := new(ReadTaskResponse)
	err := c.cc.Invoke(ctx, "/api.TaskService/ReadTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	ReadTask(context.Context, *ReadTaskRequest) (*ReadTaskResponse, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) ReadTask(ctx context.Context, req *ReadTaskRequest) (*ReadTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_ReadTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).ReadTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TaskService/ReadTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).ReadTask(ctx, req.(*ReadTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "ReadTask",
			Handler:    _TaskService_ReadTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
