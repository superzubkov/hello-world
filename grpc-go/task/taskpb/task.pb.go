// Code generated by protoc-gen-go. DO NOT EDIT.
// source: taskpb/task.proto

package taskpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HttpHeaders          string   `protobuf:"bytes,2,opt,name=http_headers,json=httpHeaders,proto3" json:"http_headers,omitempty"`
	RequestTime          string   `protobuf:"bytes,3,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	ErrorConditions      string   `protobuf:"bytes,4,opt,name=error_conditions,json=errorConditions,proto3" json:"error_conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetHttpHeaders() string {
	if m != nil {
		return m.HttpHeaders
	}
	return ""
}

func (m *Task) GetRequestTime() string {
	if m != nil {
		return m.RequestTime
	}
	return ""
}

func (m *Task) GetErrorConditions() string {
	if m != nil {
		return m.ErrorConditions
	}
	return ""
}

type CreateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{1}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CreateTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{2}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type ReadTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTaskRequest) Reset()         { *m = ReadTaskRequest{} }
func (m *ReadTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTaskRequest) ProtoMessage()    {}
func (*ReadTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{3}
}

func (m *ReadTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTaskRequest.Unmarshal(m, b)
}
func (m *ReadTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTaskRequest.Marshal(b, m, deterministic)
}
func (m *ReadTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTaskRequest.Merge(m, src)
}
func (m *ReadTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTaskRequest.Size(m)
}
func (m *ReadTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTaskRequest proto.InternalMessageInfo

func (m *ReadTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ReadTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTaskResponse) Reset()         { *m = ReadTaskResponse{} }
func (m *ReadTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ReadTaskResponse) ProtoMessage()    {}
func (*ReadTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{4}
}

func (m *ReadTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTaskResponse.Unmarshal(m, b)
}
func (m *ReadTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTaskResponse.Marshal(b, m, deterministic)
}
func (m *ReadTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTaskResponse.Merge(m, src)
}
func (m *ReadTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ReadTaskResponse.Size(m)
}
func (m *ReadTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTaskResponse proto.InternalMessageInfo

func (m *ReadTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{5}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{6}
}

func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(m, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type DeleteTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskRequest) Reset()         { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()    {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{7}
}

func (m *DeleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskRequest.Unmarshal(m, b)
}
func (m *DeleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskRequest.Merge(m, src)
}
func (m *DeleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskRequest.Size(m)
}
func (m *DeleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskRequest proto.InternalMessageInfo

func (m *DeleteTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type DeleteTaskResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskResponse) Reset()         { *m = DeleteTaskResponse{} }
func (m *DeleteTaskResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskResponse) ProtoMessage()    {}
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{8}
}

func (m *DeleteTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskResponse.Unmarshal(m, b)
}
func (m *DeleteTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskResponse.Merge(m, src)
}
func (m *DeleteTaskResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskResponse.Size(m)
}
func (m *DeleteTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskResponse proto.InternalMessageInfo

func (m *DeleteTaskResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ListTaskRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskRequest) Reset()         { *m = ListTaskRequest{} }
func (m *ListTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskRequest) ProtoMessage()    {}
func (*ListTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{9}
}

func (m *ListTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskRequest.Unmarshal(m, b)
}
func (m *ListTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskRequest.Merge(m, src)
}
func (m *ListTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskRequest.Size(m)
}
func (m *ListTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskRequest proto.InternalMessageInfo

type ListTaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskResponse) Reset()         { *m = ListTaskResponse{} }
func (m *ListTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ListTaskResponse) ProtoMessage()    {}
func (*ListTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_35bec90f5fe98b4d, []int{10}
}

func (m *ListTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskResponse.Unmarshal(m, b)
}
func (m *ListTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskResponse.Marshal(b, m, deterministic)
}
func (m *ListTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskResponse.Merge(m, src)
}
func (m *ListTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ListTaskResponse.Size(m)
}
func (m *ListTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskResponse proto.InternalMessageInfo

func (m *ListTaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "task.Task")
	proto.RegisterType((*CreateTaskRequest)(nil), "task.CreateTaskRequest")
	proto.RegisterType((*CreateTaskResponse)(nil), "task.CreateTaskResponse")
	proto.RegisterType((*ReadTaskRequest)(nil), "task.ReadTaskRequest")
	proto.RegisterType((*ReadTaskResponse)(nil), "task.ReadTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "task.UpdateTaskRequest")
	proto.RegisterType((*UpdateTaskResponse)(nil), "task.UpdateTaskResponse")
	proto.RegisterType((*DeleteTaskRequest)(nil), "task.DeleteTaskRequest")
	proto.RegisterType((*DeleteTaskResponse)(nil), "task.DeleteTaskResponse")
	proto.RegisterType((*ListTaskRequest)(nil), "task.ListTaskRequest")
	proto.RegisterType((*ListTaskResponse)(nil), "task.ListTaskResponse")
}

func init() { proto.RegisterFile("taskpb/task.proto", fileDescriptor_35bec90f5fe98b4d) }

var fileDescriptor_35bec90f5fe98b4d = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x41, 0x4f, 0xc2, 0x30,
	0x18, 0xcd, 0x26, 0x41, 0xfc, 0x30, 0xc2, 0x9a, 0x28, 0x0b, 0x07, 0xa3, 0x9c, 0xd4, 0x28, 0x1a,
	0xf0, 0x62, 0x3c, 0x90, 0x88, 0x07, 0x4d, 0x3c, 0x21, 0x5e, 0xbc, 0x2c, 0x83, 0x7e, 0x09, 0x0d,
	0xc2, 0x66, 0x5b, 0xfd, 0x0b, 0xfe, 0x35, 0x7f, 0x96, 0x69, 0xbb, 0xb2, 0xb9, 0x41, 0x9c, 0x27,
	0xd8, 0xeb, 0xfb, 0xbe, 0xf7, 0xfa, 0x5e, 0x0a, 0x9e, 0x0c, 0xc5, 0x3c, 0x9e, 0x5c, 0xaa, 0x9f,
	0x6e, 0xcc, 0x23, 0x19, 0x91, 0x8a, 0xfa, 0xdf, 0xf9, 0x72, 0xa0, 0x32, 0x0e, 0xc5, 0x9c, 0xec,
	0x81, 0xcb, 0xa8, 0xef, 0x1c, 0x39, 0x27, 0x3b, 0x23, 0x97, 0x51, 0x72, 0x0c, 0xbb, 0x33, 0x29,
	0xe3, 0x60, 0x86, 0x21, 0x45, 0x2e, 0x7c, 0x57, 0x9f, 0xd4, 0x15, 0xf6, 0x60, 0x20, 0x45, 0xe1,
	0xf8, 0xfe, 0x81, 0x42, 0x06, 0x92, 0x2d, 0xd0, 0xdf, 0x32, 0x94, 0x04, 0x1b, 0xb3, 0x05, 0x92,
	0x53, 0x68, 0x22, 0xe7, 0x11, 0x0f, 0xa6, 0xd1, 0x92, 0x32, 0xc9, 0xa2, 0xa5, 0xf0, 0x2b, 0x9a,
	0xd6, 0xd0, 0xf8, 0x70, 0x05, 0x77, 0xfa, 0xe0, 0x0d, 0x39, 0x86, 0x12, 0x95, 0x9d, 0x91, 0xd9,
	0x41, 0x0e, 0x41, 0xdb, 0xd4, 0xbe, 0xea, 0x3d, 0xe8, 0x6a, 0xff, 0x9a, 0x60, 0xec, 0x5f, 0x03,
	0xc9, 0x0e, 0x89, 0x38, 0x5a, 0x0a, 0xfc, 0x73, 0xea, 0x0c, 0x1a, 0x23, 0x0c, 0x69, 0x56, 0xa8,
	0x05, 0xdb, 0xea, 0x28, 0x58, 0x65, 0x50, 0x55, 0x9f, 0x8f, 0xb4, 0xd3, 0x83, 0x66, 0xca, 0x2d,
	0xb9, 0xbf, 0x0f, 0xde, 0x4b, 0x4c, 0xff, 0x7f, 0x95, 0xec, 0x50, 0x49, 0xa9, 0x73, 0xf0, 0xee,
	0xf1, 0x0d, 0x7f, 0x4b, 0x6d, 0xbc, 0xcc, 0x05, 0x90, 0x2c, 0x3b, 0xd1, 0xd8, 0x48, 0xf7, 0xa0,
	0xf1, 0xc4, 0x84, 0xcc, 0xac, 0x56, 0x71, 0xa4, 0x50, 0x39, 0x8f, 0xbd, 0x6f, 0x17, 0xea, 0xea,
	0xf3, 0x19, 0xf9, 0x27, 0x9b, 0x22, 0x19, 0x00, 0xa4, 0xa5, 0x91, 0x96, 0xe1, 0x17, 0xba, 0x6f,
	0xfb, 0xc5, 0x83, 0x44, 0xf0, 0x06, 0x6a, 0xb6, 0x13, 0xb2, 0x6f, 0x58, 0xb9, 0x3e, 0xdb, 0x07,
	0x79, 0x38, 0x19, 0x1d, 0x00, 0xa4, 0x29, 0x5b, 0xed, 0x42, 0x59, 0x56, 0x7b, 0x4d, 0x21, 0x03,
	0x80, 0x34, 0x42, 0xbb, 0xa0, 0x50, 0x81, 0x5d, 0xb0, 0x26, 0xed, 0x5b, 0xa8, 0xd9, 0x04, 0xad,
	0xf9, 0x5c, 0xc8, 0xd6, 0x7c, 0x3e, 0xe8, 0x2b, 0xe7, 0xae, 0xf6, 0x5a, 0x35, 0x2f, 0x79, 0x52,
	0xd5, 0xaf, 0xb8, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x49, 0x15, 0x81, 0xc8, 0xda, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	ReadTask(ctx context.Context, in *ReadTaskRequest, opts ...grpc.CallOption) (*ReadTaskResponse, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error)
	ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (TaskService_ListTaskClient, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/task.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ReadTask(ctx context.Context, in *ReadTaskRequest, opts ...grpc.CallOption) (*ReadTaskResponse, error) {
	out := new(ReadTaskResponse)
	err := c.cc.Invoke(ctx, "/task.TaskService/ReadTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/task.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error) {
	out := new(DeleteTaskResponse)
	err := c.cc.Invoke(ctx, "/task.TaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ListTask(ctx context.Context, in *ListTaskRequest, opts ...grpc.CallOption) (TaskService_ListTaskClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TaskService_serviceDesc.Streams[0], "/task.TaskService/ListTask", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskServiceListTaskClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TaskService_ListTaskClient interface {
	Recv() (*ListTaskResponse, error)
	grpc.ClientStream
}

type taskServiceListTaskClient struct {
	grpc.ClientStream
}

func (x *taskServiceListTaskClient) Recv() (*ListTaskResponse, error) {
	m := new(ListTaskResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	ReadTask(context.Context, *ReadTaskRequest) (*ReadTaskResponse, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*DeleteTaskResponse, error)
	ListTask(*ListTaskRequest, TaskService_ListTaskServer) error
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) ReadTask(ctx context.Context, req *ReadTaskRequest) (*ReadTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTask not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTask(ctx context.Context, req *UpdateTaskRequest) (*UpdateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedTaskServiceServer) DeleteTask(ctx context.Context, req *DeleteTaskRequest) (*DeleteTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedTaskServiceServer) ListTask(req *ListTaskRequest, srv TaskService_ListTaskServer) error {
	return status.Errorf(codes.Unimplemented, "method ListTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_ReadTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).ReadTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/ReadTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).ReadTask(ctx, req.(*ReadTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_ListTask_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListTaskRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServiceServer).ListTask(m, &taskServiceListTaskServer{stream})
}

type TaskService_ListTaskServer interface {
	Send(*ListTaskResponse) error
	grpc.ServerStream
}

type taskServiceListTaskServer struct {
	grpc.ServerStream
}

func (x *taskServiceListTaskServer) Send(m *ListTaskResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "ReadTask",
			Handler:    _TaskService_ReadTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTask",
			Handler:       _TaskService_ListTask_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "taskpb/task.proto",
}
